<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0urvp0w1vphsjx10ovlmq1lci3wf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dell/Desktop/Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0urvp0w1vphsjx10ovlmq1lci3wf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0urvp0w1vphsjx10ovlmq1lci3wf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9773C08E555F4ECDA96C478DF2C44DD0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='cost' datatype='real' name='[Calculation_571675693031088128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])-SUM([Profit])' />
      </column>
      <column caption='Negative' datatype='real' name='[Calculation_893964541849866242]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Sales]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region, State/Province, Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Country/Region, State/Province, Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(Canada, Alberta, Appliances), (Canada, Alberta, Art), (Canada, Alberta, Chairs) and 80 more&quot;'>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Appliances&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Art&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Envelopes&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Fasteners&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Tables&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Art&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Bookcases&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Machines&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;Canada&quot;,&quot;Saskatchewan&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Accessories&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Appliances&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Art&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Binders&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Bookcases&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Copiers&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Envelopes&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Fasteners&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Labels&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Machines&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Storage&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Supplies&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Tables&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Accessories&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Appliances&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Binders&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Storage&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Tables&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Accessories&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Binders&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Copiers&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Labels&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Storage&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Accessories&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Appliances&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Art&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Binders&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Bookcases&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Envelopes&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Fasteners&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Labels&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Machines&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Storage&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Supplies&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Tables&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Accessories&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Appliances&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Art&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Binders&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Bookcases&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Chairs&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Copiers&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Envelopes&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Fasteners&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Furnishings&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Labels&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Machines&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Paper&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Phones&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Storage&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Supplies&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Tables&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_9773C08E555F4ECDA96C478DF2C44DD0]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Country/Region, State/Province, Sub-Category]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
          <groupfilter function='level-members' level='[State/Province]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country/Region' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State/Province' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_893964541849866242' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_571675693031088128' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_9773C08E555F4ECDA96C478DF2C44DD0'>
            <properties context=''>
              <relation connection='excel-direct.0urvp0w1vphsjx10ovlmq1lci3wf' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Information' name='[Action2_461FAC09F9594D9485658E0FD238A74C]'>
      <source datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' type='datasource' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[State/Province]&gt;' />
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3_7584DFADF9C442D380734A66E63023BA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_0AEC37D1AC144E499EE14279E1D29720]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Pie Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_97B8061E355043218DA1CBABE53959EF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Bubble Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
    </datasources>
    <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Advance Funnel Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column caption='Negative' datatype='real' name='[Calculation_893964541849866242]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Sales]' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_893964541849866242]' derivation='Sum' name='[sum:Calculation_893964541849866242:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Calculation_893964541849866242:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]</rows>
        <cols>([federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Calculation_893964541849866242:qk] + [federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{0784A4CF-9129-4D57-824F-E9A3C99A51E1}' />
    </worksheet>
    <worksheet name='Bubble Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' />
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FABBDB1-9EC7-4539-A4D7-B64D264525CC}' />
    </worksheet>
    <worksheet name='Bump Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-action-filter='[Action5_97B8061E355043218DA1CBABE53959EF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Abilene&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Akron&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Albuquerque&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Alexandria&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:City:nk]</column>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Action (Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[yr:Order Date:ok]' value='329' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[yr:Order Date:ok]' value='115' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[rank:sum:Sales:ok]</rows>
        <cols>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{9C754EF6-965B-4B7D-8874-24A9A5AE4CCF}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column datatype='string' name='[Country/Region, State/Province, Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country/Region, State/Province, Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(Canada, Alberta, Appliances), (Canada, Alberta, Art), (Canada, Alberta, Chairs) and 80 more&quot;'>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Appliances&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Art&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Envelopes&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Fasteners&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Alberta&quot;,&quot;Tables&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Art&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Bookcases&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Machines&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;British Columbia&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;Canada&quot;,&quot;Saskatchewan&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Accessories&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Appliances&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Art&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Binders&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Bookcases&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Copiers&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Envelopes&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Fasteners&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Labels&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Machines&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Storage&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Supplies&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;,&quot;Tables&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Accessories&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Appliances&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Binders&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Storage&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;,&quot;Tables&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Accessories&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Binders&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Copiers&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Labels&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;,&quot;Storage&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Accessories&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Appliances&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Art&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Binders&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Bookcases&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Envelopes&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Fasteners&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Labels&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Machines&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Storage&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Supplies&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;,&quot;Tables&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Accessories&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Appliances&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Art&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Binders&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Bookcases&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Chairs&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Copiers&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Envelopes&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Fasteners&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Furnishings&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Labels&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Machines&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Paper&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Phones&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Storage&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Supplies&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;,&quot;Tables&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Longitude (generated)]' field-type='quantitative' max='-4777842.35251984' min='-24646087.753458403' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Latitude (generated)]' field-type='quantitative' max='13720168.667109044' min='2099424.5349516408' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Country/Region, State/Province, Sub-Category (group)]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:State/Province:nk]' />
              <lod column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Country/Region:nk]' />
              <lod column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:State/Province:nk]' />
              <geometry column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Geometry (generated)]' />
              <lod column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Latitude (generated)]</rows>
        <cols>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1264A0A1-6C82-4F5F-A350-545D12230399}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-action-filter='[Action5_97B8061E355043218DA1CBABE53959EF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]</column>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]</column>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Action (Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]' />
              <wedge-size column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <size column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A338488-E1B4-461D-A0E9-1C07FB1D2ACB}' />
    </worksheet>
    <worksheet name='tree map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' />
              <size column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Category:nk]' />
              <text column='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B5E53FCD-F79A-476D-B6F5-6A1F416F6BB3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders (Sample - Superstore)' name='federated.1pz7yxr08ajfx419gm1dm0qkxvp5' />
      </datasources>
      <datasource-dependencies datasource='federated.1pz7yxr08ajfx419gm1dm0qkxvp5'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97770' id='18' param='vert' type-v2='layout-flow' w='98926' x='537' y='1115'>
            <zone h='6195' id='19' type-v2='title' w='98926' x='537' y='1115'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91575' id='5' param='horz' type-v2='layout-flow' w='98926' x='537' y='7310'>
              <zone h='91575' id='3' type-v2='layout-basic' w='89391' x='537' y='7310'>
                <zone h='45786' id='1' name='Pie Chart' w='20936' x='537' y='7310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45786' id='8' name='Bump Chart' w='42371' x='47557' y='7310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45789' id='10' name='Bubble Chart' w='20936' x='537' y='53096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45789' id='15' name='tree map' w='47519' x='42409' y='53096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45786' id='20' name='Advance Funnel Chart' w='26084' x='21473' y='7310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45789' id='22' name='Map' w='20936' x='21473' y='53096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='91575' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9535' x='89928' y='7310'>
                <zone h='10136' id='6' name='Pie Chart' pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]' type-v2='color' w='9535' x='89928' y='7310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6319' id='7' name='Pie Chart' pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' type-v2='size' w='9535' x='89928' y='17446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10136' id='9' name='Bump Chart' pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:City:nk]' type-v2='color' w='9535' x='89928' y='23765'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10136' id='11' name='Bubble Chart' pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type-v2='color' w='9535' x='89928' y='33901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10136' id='12' name='Pie Chart' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]' type-v2='filter' values='database' w='9535' x='89928' y='44037'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9046' id='13' name='Pie Chart' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' type-v2='filter' values='database' w='9535' x='89928' y='54173'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10136' id='14' name='Bubble Chart' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type-v2='filter' values='database' w='9535' x='89928' y='63219'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7559' id='16' mode='checkdropdown' name='tree map' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type-v2='filter' w='9535' x='89928' y='73355'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9046' id='21' name='Advance Funnel Chart' pane-specification-id='2' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' type-v2='color' w='9535' x='89928' y='80914'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8925' id='23' name='Map' pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Country/Region, State/Province, Sub-Category (group)]' type-v2='color' w='9535' x='89928' y='89960'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F50893E3-EC3E-4C3A-BC78-10C8176C9976}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Bubble Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EACEE6CB-2F13-47A6-B74B-C999A76ED36C}' />
    </window>
    <window class='worksheet' name='tree map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B3A6C2B1-80A2-4B28-BF57-F53B7D448AC1}' />
    </window>
    <window class='worksheet' name='Bump Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AE385129-BCF7-4FA5-A233-E32D7F3AF15F}' />
    </window>
    <window class='worksheet' name='Advance Funnel Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{1CFB453D-AB2A-4216-9369-8B167A02B188}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{501C8926-FE17-4CF0-BC3C-913AF52260B2}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Country/Region, State/Province, Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Country/Region, State/Province, Sub-Category (group)]</field>
            <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Country/Region:nk]</field>
            <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{AA537283-A372-4028-848D-176B95BBB4CF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Advance Funnel Chart'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Ship Mode:nk]</field>
                    <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Calculation_893964541849866242:qk]</field>
                    <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[sum:Sales:qk]</field>
                    <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[pcto:sum:Sales:qk:2]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Standard Class&quot;</value>
                  <value>-1378840.5509999855</value>
                  <value>1378840.5509999855</value>
                  <value>0.59265858183076536</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Bubble Chart' />
        <viewpoint name='Bump Chart' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[Country/Region, State/Province, Sub-Category (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7yxr08ajfx419gm1dm0qkxvp5].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='tree map' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device name='Medium Desktop Monitor' type='Desktop' />
        <device name='Generic Phone' type='Phone' />
      </device-preview>
      <simple-id uuid='{B02597D8-5BF2-41C3-8A3F-8208035B9E7C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Advance Funnel Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Basic Furnnel Chart' width='192'>
      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
      RJUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Color Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AdUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      afj/RNScuvptYh0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      AMHW/j+n51lmX0MCpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Waterfall Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tree map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
